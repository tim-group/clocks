#!/bin/sh

set -e

# environment variables should be set:
# BUILD_NUMBER
# NEXUS_USERNAME
# NEXUS_PASSWORD

# optional:
# NEXUS_SITE (defaults to Sonatype)
# KEY_ID (GnuPG signer, defaults to GnuPG default, probably first secret key found)

die() {
  echo "$0: $*" >&1
  exit 1
}

[ -n "$BUILD_NUMBER" ] || die "BUILD_NUMBER not specified"
[ -n "$NEXUS_USERNAME" ] || die "NEXUS_USERNAME not specified"
[ -n "$NEXUS_PASSWORD" ] || die "NEXUS_PASSWORD not specified"

nexus_site="${NEXUS_SITE-https://oss.sonatype.org}"

./gradlew publishMavenJavaPublicationToLocalFilesRepository

tmpdir=$(TMPDIR=build mktemp -d)
trap 'rm -rf "$tmpdir"' EXIT

for pom in $(find build/repo -name "*.$BUILD_NUMBER.pom"); do
    pomdir=$(dirname "$pom")
    basename=$(basename "$pom" .pom)
    bundlefilename="$basename-bundle.jar"
    for file in "$basename.pom" "$basename.jar" "$basename-javadoc.jar" "$basename-sources.jar"; do
        if [ -f "$pomdir/$file" ]; then
            ln "$pomdir/$file" "$tmpdir"
            if [ -n "$KEY_ID" ]; then
                gpg -q -ab -u "$KEY_ID" "$tmpdir/$file"
            else
                gpg -q -ab "$tmpdir/$file"
            fi
            echo "$file" >> "$tmpdir/files"
            echo "$file.asc" >> "$tmpdir/files"
        fi
    done

    args=$( while read file; do echo -C "$tmpdir" $file; done < "$tmpdir/files" )

    jar -cf build/"$bundlefilename" $args

    while read file; do
        rm "$tmpdir/$file"
    done < "$tmpdir/files"

    rm "$tmpdir/files"

    echo $bundlefilename >> "$tmpdir/bundles"
done

args=$(while read bundlefilename; do echo -F "file=@build/$bundlefilename"; done < "$tmpdir/bundles")
curl -o "$tmpdir/response.json" -u "$NEXUS_USERNAME:$NEXUS_PASSWORD" -v $args "$nexus_site/service/local/staging/bundle_upload"

#echo '{"repositoryUris":["https://oss.sonatype.org/content/repositories/comtimgroup-1048","https://oss.sonatype.org/content/repositories/comtimgroup-1049"]}' > "$tmpdir/response.json"

repositoryUrls=$( perl -w -MJSON::PP=decode_json -e 'undef $/; $r = decode_json(<STDIN>); for (@{$r->{repositoryUris}}) { print "$_\n" } ' < "$tmpdir/response.json" )

echo "Uploaded bundles and created these staging repositories:"
echo ""

for url in $repositoryUrls; do
    echo "  $url"
done
